# ----------------------------------------------------------------------
# BEGIN WordPress
# ----------------------------------------------------------------------
<IfModule mod_rewrite.c>
  RewriteEngine On
  RewriteBase /
  RewriteCond %{REQUEST_FILENAME} !-f
  RewriteCond %{REQUEST_FILENAME} !-d
  RewriteRule . /index.php [L]
</IfModule>


# ----------------------------------------------------------------------
# UTF-8 encoding
# ----------------------------------------------------------------------
# Use UTF-8 encoding for anything served text/plain or text/html
AddDefaultCharset utf-8

# Force UTF-8 for a number of file formats
AddCharset utf-8 .css .js .xml .json .rss .atom


# ----------------------------------------------------------------------
# Better website experience for IE users
# ----------------------------------------------------------------------
# Force the latest IE version, in various cases when it may fall back to IE7 mode
#  github.com/rails/rails/commit/123eb25#commitcomment-118920
# Use ChromeFrame if it's installed for a better experience for the poor IE folk
<IfModule mod_headers.c>
  Header set X-UA-Compatible "IE=Edge,chrome=1"
  # mod_headers can't match by content-type, but we don't want to send this header on *everything*...
  <FilesMatch "\.(js|css|gif|png|jpe?g|pdf|xml|oga|ogg|m4a|ogv|mp4|m4v|webm|svg|svgz|eot|ttf|otf|woff|ico|webp|appcache|manifest|htc|crx|oex|xpi|safariextz|vcf)$" >
  Header unset X-UA-Compatible
  </FilesMatch>
</IfModule>


# ----------------------------------------------------------------------
# Cross-domain AJAX requests
# ----------------------------------------------------------------------
# Serve cross-domain Ajax requests, disabled by default.
# enable-cors.org
# code.google.com/p/html5security/wiki/CrossOriginRequestSecurity
#  <IfModule mod_headers.c>
#  Header set Access-Control-Allow-Origin "*"
#  </IfModule>


# ----------------------------------------------------------------------
# CORS-enabled images (@crossorigin)
# ----------------------------------------------------------------------
# Send CORS headers if browsers request them; enabled by default for images.
# developer.mozilla.org/en/CORS_Enabled_Image
# blog.chromium.org/2011/07/using-cross-domain-images-in-webgl-and.html
# hacks.mozilla.org/2011/11/using-cors-to-load-webgl-textures-from-cross-domain-images/
# wiki.mozilla.org/Security/Reviews/crossoriginAttribute
<IfModule mod_setenvif.c>
  <IfModule mod_headers.c>
  # mod_headers, y u no match by Content-Type?!
  <FilesMatch "\.(gif|png|jpe?g|svg|svgz|ico|webp)$">
    SetEnvIf Origin ":" IS_CORS
    Header set Access-Control-Allow-Origin "*" env=IS_CORS
  </FilesMatch>
  </IfModule>
</IfModule>


# ----------------------------------------------------------------------
# Webfont access
# ----------------------------------------------------------------------
# Allow access from all domains for webfonts.
# Alternatively you could only whitelist your
# subdomains like "subdomain.example.com".
<IfModule mod_headers.c>
  <FilesMatch "\.(ttf|ttc|otf|eot|woff|font.css)$">
  Header set Access-Control-Allow-Origin "*"
  </FilesMatch>
</IfModule>

# ----------------------------------------------------------------------
# Stop search engines from indexing different files
# ----------------------------------------------------------------------
<FilesMatch "\.(txt|log|xml|css|js|gz)$">
  Header set X-Robots-Tag "noindex"
</FilesMatch>

# ----------------------------------------------------------------------
# Proper MIME type for all files
# ----------------------------------------------------------------------
# JavaScript
#   Normalize to standard type (it's sniffed in IE anyways)
#   tools.ietf.org/html/rfc4329#section-7.2
AddType application/javascript      js jsonp
AddType application/json        json

# Audio
AddType audio/ogg            oga ogg
AddType audio/mp4            m4a f4a f4b

# Video
AddType video/ogg            ogv
AddType video/mp4            mp4 m4v f4v f4p 
AddType video/webm            webm
AddType video/x-flv            flv

# SVG
#   Required for svg webfonts on iPad
#   twitter.com/FontSquirrel/status/14855840545
AddType   image/svg+xml          svg svgz
AddEncoding gzip            svgz

# Webfonts
AddType application/vnd.ms-fontobject  eot
AddType application/x-font-ttf      ttf ttc
AddType font/opentype          otf
AddType application/x-font-woff      woff
AddType image/svg+xml          svg

# Assorted types
AddType image/x-icon            ico
AddType image/webp              webp
AddType text/cache-manifest          appcache manifest
AddType text/x-component          htc
AddType application/xml            rss atom xml rdf
AddType application/x-chrome-extension    crx
AddType application/x-opera-extension    oex
AddType application/x-xpinstall        xpi
AddType application/octet-stream      safariextz
AddType application/x-web-app-manifest+json  webapp
AddType text/x-vcard            vcf
AddType application/x-shockwave-flash    swf


# ----------------------------------------------------------------------
# Gzip compression
# ----------------------------------------------------------------------
<IfModule mod_deflate.c>
  # Force deflate for mangled headers developer.yahoo.com/blogs/ydn/posts/2010/12/pushing-beyond-gzipping/
  <IfModule mod_setenvif.c>
    <IfModule mod_headers.c>
      SetEnvIfNoCase ^(Accept-EncodXng|X-cept-Encoding|X{15}|~{15}|-{15})$ ^((gzip|deflate)\s*,?\s*)+|[X~-]{4,13}$ HAVE_Accept-Encoding
      RequestHeader append Accept-Encoding "gzip,deflate" env=HAVE_Accept-Encoding
    </IfModule>
  </IfModule>

  # HTML, TXT, CSS, JavaScript, JSON, XML, HTC:
  <IfModule filter_module>
    FilterDeclare   COMPRESS
    FilterProvider  COMPRESS  DEFLATE resp=Content-Type $text/html
    FilterProvider  COMPRESS  DEFLATE resp=Content-Type $text/css
    FilterProvider  COMPRESS  DEFLATE resp=Content-Type $text/plain
    FilterProvider  COMPRESS  DEFLATE resp=Content-Type $text/xml
    FilterProvider  COMPRESS  DEFLATE resp=Content-Type $text/x-component
    FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/javascript
    FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/json
    FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/xml
    FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/xhtml+xml
    FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/rss+xml
    FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/atom+xml
    FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/vnd.ms-fontobject
    FilterProvider  COMPRESS  DEFLATE resp=Content-Type $image/svg+xml
    FilterProvider  COMPRESS  DEFLATE resp=Content-Type $image/x-icon
    FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/x-font-ttf
    FilterProvider  COMPRESS  DEFLATE resp=Content-Type $font/opentype
    FilterChain   COMPRESS
    FilterProtocol  COMPRESS  DEFLATE change=yes;byteranges=no
  </IfModule>

  <IfModule !mod_filter.c>
    # Legacy versions of Apache
    AddOutputFilterByType DEFLATE text/html text/plain text/css application/json
    AddOutputFilterByType DEFLATE application/javascript
    AddOutputFilterByType DEFLATE text/xml application/xml text/x-component
    AddOutputFilterByType DEFLATE application/xhtml+xml application/rss+xml application/atom+xml
    AddOutputFilterByType DEFLATE image/x-icon image/svg+xml application/vnd.ms-fontobject application/x-font-ttf font/opentype

    AddOutputFilter DEFLATE application/atom+xml
    AddOutputFilter DEFLATE application/json
    AddOutputFilter DEFLATE application/xhtml+xml
    AddOutputFilter DEFLATE application/xml
    AddOutputFilter DEFLATE text/css
    AddOutputFilter DEFLATE text/html
    AddOutputFilter DEFLATE text/plain
    AddOutputFilter DEFLATE text/x-component
    AddOutputFilter DEFLATE text/xml

    # The following MIME types are in the process of registration
    AddOutputFilter DEFLATE application/xslt+xml
    AddOutputFilter DEFLATE image/svg+xml

    # The following MIME types are NOT registered
    AddOutputFilter DEFLATE application/mathml+xml
    AddOutputFilter DEFLATE application/rss+xml

    # JavaScript has various MIME types
    AddOutputFilter DEFLATE application/javascript
    AddOutputFilter DEFLATE application/x-javascript
    AddOutputFilter DEFLATE text/ecmascript
    AddOutputFilter DEFLATE text/javascript

    # .ico files and other compressible images
    AddOutputFilter DEFLATE image/vnd.microsoft.icon
    AddOutputFilter DEFLATE image/x-icon
    AddOutputFilter DEFLATE image/bmp
    AddOutputFilter DEFLATE image/tiff
    AddOutputFilter DEFLATE application/pdf

    # compressible fonts (.woff is already compressed)
    AddOutputFilter DEFLATE font/opentype
    AddOutputFilter DEFLATE application/x-font-ttf font/ttf font/otf image/svg+xml
    AddOutputFilter DEFLATE application/vnd.ms-fontobject
  </IfModule>
</IfModule>


# ----------------------------------------------------------------------
# Expires headers (for better cache control)
# ----------------------------------------------------------------------
# These are pretty far-future expires headers.
# They assume you control versioning with filename-based cache busting
# Additionally, consider that outdated proxies may miscache
#   www.stevesouders.com/blog/2008/08/23/revving-filenames-dont-use-querystring/
# If you don't use filenames to version, lower the CSS  and JS to something like
#   "access plus 1 week" or so.
<IfModule mod_expires.c>
  ExpiresActive on

  <FilesMatch ".(jpg|png|gif)$">
    ExpiresDefault A0
    Header set Cache-Control "max-age=0,  no-cache, must-revalidate"
  </FilesMatch>

  # Perhaps better to whitelist expires rules? Perhaps.
  ExpiresDefault                "access plus 1 year"

  # cache.appcache needs re-requests in FF 3.6 (thanks Remy ~Introducing HTML5)
  ExpiresByType text/cache-manifest      "access plus 0 seconds"

  ExpiresByType application/json        "access plus 1 year"
  ExpiresByType application/pdf        "access plus 1 year"
  ExpiresByType application/x-shockwave-flash  "access plus 1 year"
  ExpiresByType image/bmp           "access plus 1 year"
  ExpiresByType image/gif           "access plus 1 year"
  ExpiresByType image/jpeg           "access plus 1 year"
  ExpiresByType image/png           "access plus 1 year"
  ExpiresByType image/svg+xml         "access plus 1 year"
  ExpiresByType image/tiff           "access plus 1 year"
  ExpiresByType image/vnd.microsoft.icon     "access plus 1 year"
  ExpiresByType image/x-icon          "access plus 1 year"
  ExpiresByType text/css             "access plus 1 year"
  ExpiresByType video/x-flv           "access plus 1 year"
  ExpiresByType application/vnd.bw-fontobject  "access plus 1 year"
  ExpiresByType application/x-font-ttf    "access plus 1 year"
  ExpiresByType application/font-woff      "access plus 1 year"
  ExpiresByType application/vnd.ms-fontobject "access plus 1 year"
  ExpiresByType font/ttf            "access plus 1 year"
  ExpiresByType font/otf            "access plus 1 year"
  ExpiresByType font/x-woff          "access plus 1 year"
  ExpiresByType image/svg+xml          "access plus 1 year"
  ExpiresByType font/opentype          "access plus 1 year"
  ExpiresByType image/webp          "access plus 1 year"

  # The following MIME types are in the process of registration
  ExpiresByType application/xslt+xml      "access plus 1 year"
  ExpiresByType image/svg+xml          "access plus 1 year"

  # The following MIME types are NOT registered
  ExpiresByType application/mathml+xml    "access plus 1 year"
  ExpiresByType application/rss+xml    "access plus 1 year"

  # JavaScript has various MIME types
  ExpiresByType application/x-javascript     "access plus 1 year"
  ExpiresByType application/javascript     "access plus 1 year"
  ExpiresByType text/ecmascript       "access plus 1 year"
  ExpiresByType text/javascript       "access plus 1 year"
</IfModule>



# ----------------------------------------------------------------------
# ETag removal
# ----------------------------------------------------------------------

# FileETag None is not enough for every server.
<IfModule mod_headers.c>
  Header unset ETag
</IfModule>

# Since we're sending far-future expires, we don't need ETags for
# static content.
#   developer.yahoo.com/performance/rules.html#etags
FileETag None



# ----------------------------------------------------------------------
# Stop screen flicker in IE on CSS rollovers
# ----------------------------------------------------------------------
# The following directives stop screen flicker in IE on CSS rollovers - in
# combination with the "ExpiresByType" rules for images (see above). If
# needed, un-comment the following rules.
BrowserMatch "MSIE" brokenvary=1
BrowserMatch "Mozilla/4.[0-9]{2}" brokenvary=1
BrowserMatch "Opera" !brokenvary
SetEnvIf brokenvary 1 force-no-vary


# ----------------------------------------------------------------------
# Set Keep-Alive Header
# ----------------------------------------------------------------------
# Keep-Alive allows the server to send multiple requests through one TCP-connection.
# Be aware of possible disadvantages of this setting. Turn on if you serve a lot of
# static content.
<IfModule mod_headers.c>
  Header set Connection Keep-Alive
</IfModule>


# ----------------------------------------------------------------------
# Start rewrite engine
# ----------------------------------------------------------------------
# Turning on the rewrite engine is necessary for the following rules and features.
# FollowSymLinks must be enabled for this to work.
#
# Some cloud hosting services require RewriteBase to be set: goo.gl/HOcPN
# If using the h5bp in a subdirectory, use `RewriteBase /foo` instead where 'foo' is your directory.
<IfModule mod_rewrite.c>
  Options +FollowSymlinks
  RewriteEngine On
# RewriteBase /
</IfModule>


# ----------------------------------------------------------------------
# Suppress or force the "www." at the beginning of URLs
# ----------------------------------------------------------------------
<IfModule mod_rewrite.c>
  RewriteCond %{HTTPS} !=on
  RewriteCond %{HTTP_HOST} ^www\.(.+)$ [NC]
  RewriteRule ^ http://%1%{REQUEST_URI} [R=301,L]
</IfModule>


# ----------------------------------------------------------------------
# Built-in filename-based cache busting
# ----------------------------------------------------------------------
# If you're not using the build script to manage your filename version revving,
# you might want to consider enabling this, which will route requests for
# /css/style.20110203.css to /css/style.css
# To understand why this is important and a better idea than all.css?v1231,
# read: github.com/h5bp/html5-boilerplate/wiki/cachebusting
<IfModule mod_rewrite.c>
  RewriteCond %{REQUEST_FILENAME} !-f
  RewriteCond %{REQUEST_FILENAME} !-d
  RewriteRule ^(.+)\.(\d+)\.(js|css|png|jpg|gif)$ $1.$3 [L]
</IfModule>


# ----------------------------------------------------------------------
# Prevent 404 errors for non-existing redirected folders
# ----------------------------------------------------------------------
# without -MultiViews, Apache will give a 404 for a rewrite if a folder of the same name does not exist
#   e.g. /blog/hello : webmasterworld.com/apache/3808792.htm
Options -MultiViews


# ----------------------------------------------------------------------
# Youth media protection
#  read: http://de.wikipedia.org/wiki/Jugendmedienschutz-Staatsvertrag
# Prefer:Safe with Apache for rewrite
#  read: http://tools.ietf.org/html/draft-nottingham-safe-hint-01
# ----------------------------------------------------------------------
<IfModule mod_rewrite.c>
    RewriteCond %{HTTP:prefer} =safe
    RewriteRule ^ - [F,L]
</IfModule>


# ----------------------------------------------------------------------
# Custom 404 page
# ----------------------------------------------------------------------

# You can add custom pages to handle 500 or 403 pretty easily, if you like.
# If you are hosting your site in subdirectory, adjust this accordingly
# e.g. ErrorDocument 404 /subdir/404.php
# ErrorDocument 404 /404.php


# ----------------------------------------------------------------------
# A little more security
# ----------------------------------------------------------------------
# Do we want to advertise the exact version number of Apache we're running?
# Probably not.
## This can only be enabled if used in httpd.conf - It will not work in .htaccess
# ServerTokens Prod


# "-Indexes" will have Apache block users from browsing folders without a default document
# Usually you should leave this activated, because you shouldn't allow everybody to surf through
# every folder on your server (which includes rather private places like CMS system folders).
<IfModule mod_autoindex.c>
  Options -Indexes
</IfModule>


# Block access to "hidden" directories whose names begin with a period. This
# includes directories used by version control systems such as Subversion or Git.
<IfModule mod_rewrite.c>
  RewriteCond %{SCRIPT_FILENAME} -d
  RewriteCond %{SCRIPT_FILENAME} -f
  RewriteRule "(^|/)\." - [F]
</IfModule>


# Block access to backup and source files
# This files may be left by some text/html editors and
# pose a great security danger, when someone can access them
<FilesMatch "(\.(bak|config|sql|fla|psd|ini|log|sh|inc|swp|dist)|~)$">
  Order allow,deny
  Deny from all
  Satisfy All
</FilesMatch>

# ----------------------------------------------------------------------
# WordPress features, rewrites
# ----------------------------------------------------------------------

<Ifmodule mod_rewrite.c>
  RewriteEngine On
  RewriteBase /
  
  RewriteRule (.+)(#|%23) /$1 [R=301,NE,L]

  # Redirect HTTPS requests to HTTP
  RewriteCond %{HTTPS} on
  RewriteRule (.*) http://%{HTTP_HOST}%{REQUEST_URI}
  
  # Deny access with invalid or missing referer on log-in attempts
  RewriteCond %{REQUEST_METHOD} POST
  # See http://tltech.com/info/referrer-htaccess/
  RewriteCond %{HTTP_HOST}@@%{HTTP_REFERER} !^([^@]*)@@https?://\1/wp-login\.php
  RewriteRule wp-login\.php - [L,R=403]
  
  # Deny access with invalid or missing referer on log-in attempts
  RewriteCond %{REQUEST_METHOD} POST
  RewriteCond %{HTTP_REFERER} ^$
  RewriteRule wp-login\.php - [L,R=403]

  RewriteRule ^index\.php$ - [L]
  
  # uploaded files
  RewriteRule ^files/(.+) wp-includes/ms-files.php?file=$1 [L]
  
  # forbid double slashes in all URLs
  RewriteCond %{THE_REQUEST} ^[A-Z]+\ /(([^/\ ]+/)*)/+([^\ ]*)
  RewriteRule ^ /%1%3 [L,R=301]
  
  RewriteCond %{REQUEST_FILENAME} -f [OR]
  RewriteCond %{REQUEST_FILENAME} -d
  RewriteRule ^ - [L]
  RewriteRule ^(wp-(content|admin|includes).*) $1 [L]
  RewriteRule ^(.*\.php)$ $1 [L]
  RewriteRule . index.php [L]
  
  # add a trailing slash to /wp-admin
  RewriteRule ^wp-admin$ wp-admin/ [R=301,L]
  
  # Rewrite/Redirect REST API to 404
  RewriteRule ^wp-json.*$ /404 [R=404,L]
  Redirect 301 /wp-json /404
 
  # Enumerating author names, see http://wordpress.stackexchange.com/a/130171/73
  RewriteCond %{QUERY_STRING} author=\d
  RewriteRule ^ /? [L,R=301]
</Ifmodule>

# ----------------------------------------------------------------------
# Little more security in WP and htaccess protection
# ----------------------------------------------------------------------
# PROTECT all htaccess files
<Files ~ "^[\._]ht">
  Order Allow,Deny
  Deny from all
  Satisfy All
</Files>

# PROTECT wp-config.php
<files wp-config.php>
  Order Allow,Deny
  Deny from all
  Satisfy all
</files>

# PROTECT wp-login.php
#<files wp-login.php>
#  AuthName "Admin-Bereich"
#  AuthType Basic
#  AuthUserFile /www/htdocs/absolute_path/.htusers
#  require valid-user
#</files>

# PROTECT readme.html
<Files readme.html>
  Order Allow,Deny
  Deny from all
  Satisfy all
</Files>

# PROTECT install.php
# Unkomment or change to 'Allow from all' for install of WordPress
<Files install.php>
  Order Allow,Deny
  Deny from all
  Satisfy all
</Files>

# PROTECT xmlrpc.php
#<Files xmlrpc.php>
#  Order Allow,Deny
#  Deny from all
#</Files>

# ACCESS for xmlrpc surface only for different apps
<IfModule mod_setenvif.c>
  <Files xmlrpc.php>
    # blogs
    BrowserMatch "WordPress" allowed
    # poster
    BrowserMatch "Poster" allowed
    # Windows Livew Writer
    BrowserMatch "Windows Live Writer" allowed
    # WP 4 iOS
    BrowserMatch "wp-iphone" allowed
    # WP 4 Android
    BrowserMatch "wp-android" allowed
    
    Order Allow,Deny
    Deny from All
    Allow from env=allowed
  </Files>
</IfModule>
